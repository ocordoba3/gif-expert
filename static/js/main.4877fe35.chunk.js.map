{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","onChange","target","value","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAU,IAC3BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,SAhBF,SAACN,GACtBF,EAAcE,EAAEO,OAAOC,QAe4BA,MAAOX,EAAYY,YAAY,wC,+BCvB7EC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACPxB,EAAQC,GAAUwB,MAAM,SAAAC,GAEpBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGR,CAACpB,IAEGqB,EDjBmBM,CAAa3B,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACI,qCACI,6BAAI,4BAAKpB,MAEPoB,GAAW,qBAAKJ,UAAU,mCAAf,SACG,+BAAI,mBAAGA,UAAU,2BAAjB,oBAGhB,qBAAKA,UAAU,YAAf,SAEQT,EAAKE,KAAK,SAAAC,GACN,OACI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEInCiB,EApBM,WAEjB,MAAoC3C,mBAAS,CAAC,SAAU,OAAxD,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,sBAAKgC,UAAU,oBAAf,UACI,8CACA,cAAC,EAAD,CAAahC,cAAeA,OAEhC,uBACA,qBAAKgC,UAAU,WAAf,SAEQa,EAAWpB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCX7D8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.4877fe35.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >= 2) {\r\n            setCategories( catgs => [inputValue, ...catgs]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" onChange={handleInputValue} value={inputValue} placeholder=\"Escribe algo y presiona Enter...\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=CNdgSCz9cXqC4FPjqRQ7XNCvpbDIyFmv`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h1><i>{ category }</i></h1>\r\n\r\n            { loading && <div className=\"animate__animated animate__flash\">\r\n                            <h2><i className=\"fas fa-spinner fa-spin\" /> Cargando...</h2>\r\n                         </div>}\r\n\r\n            <div className=\"grid-card\">\r\n                {\r\n                    data.map( img => {\r\n                        return (\r\n                            <GifGridItem key={img.id} {...img} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then( imgs => {\r\n\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 500);\r\n\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Marvel', 'DC']);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-header \">\r\n                <h1>GifExpertApp</h1>\r\n                <AddCategory setCategories={setCategories} />\r\n            </div>\r\n            <hr />\r\n            <div className=\"category\">\r\n                {\r\n                    categories.map(category => <GifGrid key={category} category={category} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root') );\n"],"sourceRoot":""}